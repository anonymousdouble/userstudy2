(()=>{"use strict";var e={6914:(e,t,o)=>{o(6992),o(8674),o(9601),o(7727);var i=o(144),n=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{attrs:{id:"app"}},[o("router-view")],1)},a=[];const c={name:"app"},r=c;var s=o(1001),d=(0,s.Z)(r,n,a,!1,null,null,null);const h=d.exports;var l=o(8345),p=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"container"},[o("h1",[e._v(e._s(e.title))]),o("div",{staticClass:"intro"},[o("p",{domProps:{innerHTML:e._s(e.introduction1)}}),o("p",{domProps:{innerHTML:e._s(e.introduction2)}}),o("p",{domProps:{innerHTML:e._s(e.introduction3)}})]),o("form",[o("div",{staticClass:"name_input"},[o("span",[e._v("Your name: ")]),o("label",[o("input",{directives:[{name:"model",rawName:"v-model",value:e.name,expression:"name"}],attrs:{type:"text",required:""},domProps:{value:e.name},on:{input:function(t){t.target.composing||(e.name=t.target.value)}}})])]),o("div",[o("button",{staticClass:"start",on:{click:e.pracQuestionnaire}},[e._v("Practice")])]),o("button",{staticClass:"start",on:{click:e.startQuestionnaire}},[e._v("Start")])])])},f=[];o(3210),o(8309),o(7658);const b={data:function(){return{title:"User Study about Code Refactorings using Pythonic Idioms",introduction1:"Welcome to our user study! In this study, In this study, you'll be presented with Python code, and your task is to identify pairs of code â€” one with non-idiomatic practices and its counterpart refactored with Pythonic idioms.  \n There are <b>24</b> questions. Each question should be completed within a <b>5-minute</b> time frame, and once the time is up, you will not be able to make any further changes and must move on to the next question.  <b>Feel free to search the internet to assist in answering questions, but refrain from executing or writing code during the process. </b>",introduction3:"To start the study, please enter your name and click start. The first question will commence, and the timer will begin counting down.",name:""}},methods:{startQuestionnaire:function(){""!==this.name.trim()&&this.$router.push({name:"report",params:{name:this.name}})},pracQuestionnaire:function(){""!==this.name.trim()&&this.$router.push({name:"demo",params:{name:this.name}})}}},u=b;var m=(0,s.Z)(u,p,f,!1,null,null,null);const g=m.exports;var w=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"container1"},[o("div",{staticClass:"question-header"},[o("h2",[e._v(e._s("Question "+(e.questionIndex+1)+":"))]),o("div",{staticClass:"timer"},[e._v(e._s("Time: "+e.minutes+":"+e.seconds))])]),o("div",{staticClass:"container2"},[o("p",{staticClass:"question-title",domProps:{innerHTML:e._s(e.question.title)}}),o("p",{staticClass:"question-note"},[e._v("Note:"),o("pre",[o("code",{staticClass:"question-references",staticStyle:{display:"block","white-space":"pre-wrap"},domProps:{innerHTML:e._s(e.question.references)}},[e._v("\n")])])]),e._l(e.tupleIndex,(function(t){return o("div",[o("ReportTuple",{key:t,ref:"reportTuples_"+t,refInFor:!0,attrs:{question:e.question,"able-edit":e.ableEdit,name:t}}),o("hr")],1)})),o("button",{attrs:{disabled:!e.ableEdit},on:{click:e.addQuestion}},[e._v("+")])],2),o("div",{staticClass:"container3"},[o("button",{staticClass:"next-button",on:{click:e.nextQuestion}},[e._v("Next")])])])},y=[],C=(o(2564),o(8862),function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"question-details"},[o("p",[e._v("Original Code:")]),o("div",{staticClass:"form-group"},[o("label",[o("textarea",{directives:[{name:"model",rawName:"v-model",value:e.reason,expression:"reason"}],attrs:{rows:"3",disabled:!e.ableEdit},domProps:{value:e.reason},on:{input:function(t){t.target.composing||(e.reason=t.target.value)}}})])]),o("p",[e._v("Refactored Code:")]),o("div",{staticClass:"form-group-refactored"},[o("label",[o("textarea",{directives:[{name:"model",rawName:"v-model",value:e.references,expression:"references"}],attrs:{rows:"5",disabled:!e.ableEdit},domProps:{value:e.references},on:{input:function(t){t.target.composing||(e.references=t.target.value)}}})])])])}),v=[];const k={name:"ReportTuple",props:{question:{type:Object,required:!0},ableEdit:{type:Boolean,required:!0},name:{type:String,required:!0}},data:function(){return{selectedOption:null,reason:"",references:""}},methods:{resetParameters:function(){this.selectedOption=null,this.reason="",this.references=""}}},_=k;var T=(0,s.Z)(_,C,v,!1,null,"46445144",null);const L=T.exports;var R=o(3162);const x={name:"Report",components:{ReportTuple:L},data:function(){return{questionIndex:0,minutes:5,seconds:0,tupleIndex:1,ableEdit:!0,answers:[],finalStoredData:{},questions:[{title:'Refactor the following Python code with list comprehension, e.g., a= [1 for i in range(2)]. <p><a href="https://github.com/yenchenlin/DeepLearningFlappyBird/blob/5a08d405b68facb784c7dc06ae0f6ad341c2a5a3/deep_q_network.py#L78-L204">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with a For statement with multiple targets, e.g., <code>"for i in a: print(i[0]) can be refactored into for i_0, *i_remain in a: print(i_0)"</code>. <p><a href="https://github.com/franMarz/TexTools-Blender/blob/d2c324f9f4e986c2cdb00da6f0fd0999bb871203/utilities_uv.py#L137-L207">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with chain comparison, e.g., <code>2 > a > 1</code>. <p><a href="https://github.com/JiaxuanYou/graph-generation/blob/3444b8ad2fd7ecb6ade45086b4c75f8e2e9f29d1/create_graphs.py#L7-L153">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with While/For statement with else clause, e.g., <code>"for i in a:\n  pass \n  else: \n  pass"</code>. <p><a href="https://github.com/forseti-security/forseti-security/blob/9069bfb04e818e51f484d860a249de0d578d4cf3/google/cloud/forseti/services/dao.py#L841-L872">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with set comprehension, e.g., a= {i for i in range(2)}. <p><a href="https://github.com/mozilla/pontoon/blob/3a95b7bb3c3982cad3320898ee9b791dfa1267ed/pontoon/insights/tasks.py#L386-L429">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with chain comparison, e.g., <code>2 > a > 1</code>. <p><a href="https://github.com/wbond/package_control/blob/ec6555920e41d195a1721c7a0bcb6fa68e4098aa/package_control/deps/oscrypto/trust_list.py#L65-L138">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with an Assignment statement using a value to assign multiple targets, e.g., <code>"a=1; b=1 can be refactored into a=b=1"</code>. <p><a href="https://github.com/IntelLabs/coach/blob/2c60cb5acd8cd3c9c381a5066c208e69fc273c7b/rl_coach/dashboard_components/signals_file_base.py#L26-L39">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with a For statement with multiple targets, e.g., <code>"for i in a: print(i[0]) can be refactored into for i_0, *i_remain in a: print(i_0)"</code>. <p><a href="https://github.com/chrismaddalena/ODIN/blob/03fb0044fe658df4d67ffbb8223060958537f17e/lib/htmlreporter.py#L551-L612">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with While/For statement with else clause, e.g., <code>"for i in a:\n  pass \n  else: \n  pass"</code>. <p><a href="https://github.com/DLLXW/data-science-competition/blob/03490a7ea8e6297211fe8709b61ddad251ae51dd/else/%E5%A4%A9%E9%A9%AC%E6%9D%AF--AI%2Bz%E6%99%BA%E8%83%BD%E8%B4%A8%E6%A3%80/code/uer/utils/tokenizer.py#L350-L397">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with Starred in Function Calls, e.g., <code>"func(a[0],a[1]) can be refactored into func(*a[:2])"</code>. <p><a href="https://github.com/neuralchen/SimSwap/blob/a5f6dea67398eec9ee71e156f7ad15dbd7ce4977/test_video_swap_multispecific.py#L33-L98">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with list comprehension, e.g., a= [1 for i in range(2)]. <p><a href="https://github.com/microsoft/nni/blob/767ed7f22e1e588ce76cbbecb6c6a4a76a309805/nni/algorithms/hpo/networkmorphism_tuner/graph.py#L866-L908">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with an Assignment statement using a value to assign multiple targets, e.g., <code>"a=1; b=1 can be refactored into a=b=1"</code>. <p><a href="https://github.com/ansible/ansible-modules-extras/blob/f216ba8e0616bc8ad8794c22d4b48e1ab18886cf/cloud/rackspace/rax_mon_check.py#L144-L262">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with truth test, e.g., <code>a != [] can be refactored into a</code>. <p><a href="https://github.com/django/django/blob/c709a748ce6e0759e415a0e3544e0f4ad3d30f8b/django/http/multipartparser.py#L132-L364">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with Assignment with multiple targets, e.g., <code>"a = 1; b = c can be refactored into a, b = 1, c pass"</code>. <p><a href="https://github.com/diffgram/diffgram/blob/5bf45ff076ecc9b3192eedae94d2f515cca30edf/default/tests/methods/event/test_user_visit_history.py#L18-L36">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with Starred in Function Calls, e.g., <code>"func(a[0],a[1]) can be refactored into func(*a[:2])"</code>. <p><a href="https://github.com/open-mmlab/OpenPCDet/blob/255db8f02a8bd07211d2c91f54602d63c4c93356/pcdet/ops/pointnet2/pointnet2_batch/pointnet2_modules.py#L61-L99">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with fstring to format a string, e.g., <code>a=world; "hello: %s" % a be refactored into f"hello:{a}"</code>. <p><a href="https://github.com/speechbrain/speechbrain/blob/d71a7e018738329fe9a7951d2e9457d52f94edad/recipes/KsponSpeech/ksponspeech_prepare.py#L136-L204">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with With statement, e.g., <code>"f=open("xxx","r"); pass) can be refactored into with open("xxx","r") as f: pass "</code>. <p><a href="https://github.com/sevagas/macro_pack/blob/071fd4aa16dc74815c2a860ddafe4358d6454c89/src/modules/wsf_gen.py#L27-L48">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with set comprehension, e.g., a= {i for i in range(2)}. <p><a href="https://github.com/forseti-security/forseti-security/blob/9069bfb04e818e51f484d860a249de0d578d4cf3/google/cloud/forseti/services/dao.py#L2044-L2073">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with dict comprehension, e.g., a= {i:i for i in range(2)}. <p><a href="https://github.com/huggingface/transformers/blob/1d7773594754457ed4a79cf6d98bcaabea5bff51/tests/test_modeling_common.py#L2613-L2644">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with truth test, e.g., <code>a != [] can be refactored into a</code>. <p><a href="https://github.com/geek-ai/MAgent/blob/2144dbd4bef49a8bda499dee95956c3fa04d6a43/examples/train_single.py#L115-L210">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with Assignment with multiple targets, e.g., <code>"a = 1; b = c can be refactored into a, b = 1, c pass"</code>. <p><a href="https://github.com/facebookresearch/ReAgent/blob/57b58a8b3a6b74bb87a197b73a6cd108ddad895e/reagent/gym/envs/pomdp/pocman.py#L365-L379">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with dict comprehension, e.g., a= {i:i for i in range(2)}. <p><a href="https://github.com/DATA-DOG/taiga-back/blob/9d54dc63b52b1c5222a904c01ce272169dd26759/taiga/projects/history/models.py#L99-L242">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with With statement, e.g., <code>"f=open("xxx","r"); pass) can be refactored into with open("xxx","r") as f: pass "</code>. <p><a href="https://github.com/golemhq/golem/blob/84f51478b169cdeab73fc7e2a22a64d0a2a29263/golem/report/execution_report.py#L186-L227">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."},{title:'Refactor the following Python code with fstring to format a string, e.g., <code>a=world; "hello: %s" % a be refactored into f"hello:{a}"</code>. <p><a href="https://github.com/marin-m/pbtk/blob/777254e0fe38819fddee58ab6cb554c219f74908/utils/descpb_to_proto.py#L134-L183">Right Click the Link to See Code in A New Tab!</a></p>',references:"Find all code pairs consisting of non-idiomatic code and idiomatic code. Place the non-idiomatic code in the <b>'Original Code'</b> section and the corresponding idiomatic code in the <b>'Refactored Code'</b> section. <b>There is one or more code pairs. Click the '+' button to add another code pair.</b> If, within 5 minutes, you believe that there is no code to refactor or you cannot identify code that can be refactored, can skip it."}]}},created:function(){this.createAnswer(this.tupleIndex)},computed:{question:function(){return this.questions[this.questionIndex]}},methods:{startTimer:function(){var e=this;setInterval((function(){e.seconds>0?e.seconds--:e.minutes>0?(e.minutes--,e.seconds=59):e.ableEdit=!1}),1e3)},addQuestion:function(){this.tupleIndex+=1,this.createAnswer(this.tupleIndex)},createAnswer:function(e){var t={tuple_id:e};this.answers.push(t)},resetParameters:function(){this.minutes=5,this.seconds=0,this.tupleIndex=1,this.ableEdit=!0,this.answers=[],this.$refs["reportTuples_1"][0].resetParameters(),this.createAnswer(this.tupleIndex)},nextQuestion:function(){console.log(this.$refs);for(var e=0;e<this.tupleIndex;e++)this.answers[e]["selectedOption"]=this.$refs["reportTuples_"+(e+1)][0].selectedOption,this.answers[e]["reason"]=this.$refs["reportTuples_"+(e+1)][0].reason,this.answers[e]["references"]=this.$refs["reportTuples_"+(e+1)][0].references;console.log(this.answers),this.finalStoredData["answers_"+(this.questionIndex+1)]={answers:this.answers,min:4-this.minutes,sec:60-this.seconds},this.questionIndex<23?(this.questionIndex+=1,this.resetParameters()):(this.saveAsJSON(),this.$router.push("/thanks"))},saveAsJSON:function(){var e=JSON.stringify(this.finalStoredData,null,2),t=this.$route.params.name+".json",o=new Blob([e],{type:"text/plain;charset=utf-8"});(0,R.saveAs)(o,t)}},mounted:function(){this.startTimer()}},P=x;var I=(0,s.Z)(P,w,y,!1,null,"122e456e",null);const A=I.exports;var O=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"thanks"},[o("p",{domProps:{innerHTML:e._s(e.thanks1)}}),o("p",{domProps:{innerHTML:e._s(e.thanks2)}})])},S=[];const q={name:"Thanks",data:function(){return{thanks1:"Thanks for participation. The result is downloaded to your local side.",thanks2:"Please send it to me via Wechat, or to <a href='mailto:zejun.zhang@anu.edu.au'>zejun.zhang@anu.edu.au</a> :)"}}},N=q;var F=(0,s.Z)(N,O,S,!1,null,"52909f86",null);const E=F.exports;var $=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"container1"},[o("div",{staticClass:"question-header"},[o("h2",[e._v(e._s("Question "+(e.questionIndex+1)+":"))]),o("div",{staticClass:"timer"},[e._v(e._s("Time: "+e.minutes+":"+e.seconds))])]),o("div",{staticClass:"container2"},[o("p",{staticClass:"question-title",domProps:{innerHTML:e._s(e.question.title)}}),e._l(e.tupleIndex,(function(t){return o("div",[o("ReportTuple",{key:t,ref:"reportTuples_"+t,refInFor:!0,attrs:{question:e.question,"able-edit":e.ableEdit,name:t}}),o("hr")],1)})),o("button",{attrs:{disabled:!e.ableEdit},on:{click:e.addQuestion}},[e._v("+")])],2),o("div",{staticClass:"container3"},[o("button",{staticClass:"next-button",on:{click:e.nextQuestion}},[e._v("Next")])])])},j=[];const D={name:"Demo",components:{ReportTuple:L},data:function(){return{questionIndex:0,minutes:5,seconds:0,tupleIndex:1,ableEdit:!0,answers:[],finalStoredData:{},questions:[{title:"Please compare the products: <b>amd processor</b> vs <b>intel processor</b>",options:["amd processor is better","intel processor is better","they are equal","hard to say"]}]}},created:function(){this.createAnswer(this.tupleIndex)},computed:{question:function(){return this.questions[this.questionIndex]}},methods:{startTimer:function(){var e=this;setInterval((function(){e.seconds>0?e.seconds--:e.minutes>0?(e.minutes--,e.seconds=59):e.ableEdit=!1}),1e3)},addQuestion:function(){this.tupleIndex+=1,this.createAnswer(this.tupleIndex)},createAnswer:function(e){var t={tuple_id:e};this.answers.push(t)},resetParameters:function(){this.minutes=5,this.seconds=0,this.tupleIndex=1,this.ableEdit=!0,this.answers=[],this.$refs["reportTuples_1"][0].resetParameters(),this.createAnswer(this.tupleIndex)},nextQuestion:function(){console.log(this.$refs);for(var e=0;e<this.tupleIndex;e++)this.answers[e]["selectedOption"]=this.$refs["reportTuples_"+(e+1)][0].selectedOption,this.answers[e]["reason"]=this.$refs["reportTuples_"+(e+1)][0].reason,this.answers[e]["references"]=this.$refs["reportTuples_"+(e+1)][0].references;console.log(this.answers),this.finalStoredData["answers_"+(this.questionIndex+1)]={answers:this.answers,min:4-this.minutes,sec:60-this.seconds},this.saveAsJSON(),this.$router.push("/thanks")},saveAsJSON:function(){var e=JSON.stringify(this.finalStoredData,null,2),t=this.$route.params.name+".json",o=new Blob([e],{type:"text/plain;charset=utf-8"});(0,R.saveAs)(o,t)}},mounted:function(){this.startTimer()}},Q=D;var M=(0,s.Z)(Q,$,j,!1,null,"be4839ee",null);const Z=M.exports;i.Z.use(l.Z);var B=[{path:"/",name:"welcome",component:g},{path:"/report/:name",name:"report",component:A},{path:"/thanks",name:"thanks",component:E},{path:"/demo/:name",name:"demo",component:Z}],z=new l.Z({routes:B});const H=z;new i.Z({router:H,render:function(e){return e(h)}}).$mount("#app")}},t={};function o(i){var n=t[i];if(void 0!==n)return n.exports;var a=t[i]={exports:{}};return e[i].call(a.exports,a,a.exports,o),a.exports}o.m=e,(()=>{var e=[];o.O=(t,i,n,a)=>{if(!i){var c=1/0;for(h=0;h<e.length;h++){for(var[i,n,a]=e[h],r=!0,s=0;s<i.length;s++)(!1&a||c>=a)&&Object.keys(o.O).every((e=>o.O[e](i[s])))?i.splice(s--,1):(r=!1,a<c&&(c=a));if(r){e.splice(h--,1);var d=n();void 0!==d&&(t=d)}}return t}a=a||0;for(var h=e.length;h>0&&e[h-1][2]>a;h--)e[h]=e[h-1];e[h]=[i,n,a]}})(),(()=>{o.d=(e,t)=>{for(var i in t)o.o(t,i)&&!o.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})}})(),(()=>{o.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()})(),(()=>{o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})(),(()=>{var e={143:0};o.O.j=t=>0===e[t];var t=(t,i)=>{var n,a,[c,r,s]=i,d=0;if(c.some((t=>0!==e[t]))){for(n in r)o.o(r,n)&&(o.m[n]=r[n]);if(s)var h=s(o)}for(t&&t(i);d<c.length;d++)a=c[d],o.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return o.O(h)},i=self["webpackChunktosem_exp"]=self["webpackChunktosem_exp"]||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))})();var i=o.O(void 0,[998],(()=>o(6914)));i=o.O(i)})();
//# sourceMappingURL=app.6f3f6e39.js.map